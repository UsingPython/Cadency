name: Test
on:
  push:
    branches:
      - master
  pull_request:
    branches: [develop, master]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - run: yarn install --frozen-lockfile
      - run: yarn lint
  unittest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - run: yarn install --frozen-lockfile
      - run: yarn test
      - name: Save coverage
        uses: actions/upload-artifact@v2
        with:
          name: lcov.info
          path: coverage/lcov.info
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download lcov
        uses: actions/download-artifact@v2
        with:
          name: lcov.info
          path: coverage/
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  build:
    needs: [lint, unittest]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Install Packages
        run: yarn install --frozen-lockfile
      - name: Build Step
        run: yarn build
  release:
    needs: [build, sonarcloud]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Install Packages
        run: yarn install --frozen-lockfile
      - name: Build Step
        env:
          Test: ""
        run: yarn build
      - name: Run Semantic Release
        run: yarn semantic-release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
